/*
 * You may redistribute this program and/or modify it under the terms of
 * the GNU General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto2";
package p2pnet.messaging.protocol;

message p2pMessage {
	message Header {
		optional bytes src_th = 1;
		optional bytes dest_th = 2;
	}

	required Header header = 1;

	message Payload {
		// MessageType section.
		enum MessageType {
			DATA = 0;
			ONION = 1;

			// Key exchange cryptographic messages.
			KEY_EXCHANGE_REQUEST = 2;
			KEY_EXCHANGE_RESPONSE = 3;
			AGREEMENT = 4;
		}

		optional MessageType message_type = 1 [default = DATA];

		// End of MessageType section.

		message KeyExchangeRequestPart {
			required bytes src_pubkey = 1;
		}

		message KeyExchangeResponsePart {
			required bytes src_pubkey = 1;
		}

		message AgreementPart {
			required bytes src_pubkey = 1;	// My own ECDH public key (just generated)
		}

		optional bytes serialized_payload = 2;
	}

	required Payload payload = 2;

	// CRC-32 of message payload. If CRC-32 doesn't match the message, then the message is dropped.
	required fixed32 crc32 = 3;
}

/*
 * This message type is used in Local Peer Discovery through UDP.
 */
message UDPLPDMessage {
	required uint32 port = 1;
	optional uint32 version = 2;

	required bytes src_th = 3;
	required bytes src_pubkey = 4;
}